{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react/meme-genarator/src/components/Meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport memesData from \"./memesData.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  /**\n   * Challenge: Update our state to save the meme-related\n   * data as an object called `meme`. It should have the\n   * following 3 properties:\n   * topText, bottomText, randomImage.\n   * \n   * The 2 text states can default to empty strings for now,\n   * amd randomImage should default to \"http://i.imgflip.com/1bij.jpg\"\n   * \n   * Next, create a new state variable called `allMemeImages`\n   * which will default to `memesData`, which we imported above\n   * \n   * Lastly, update the `getMemeImage` function and the markup \n   * to reflect our newly reformed state object and array in the\n   * correct way.\n   */\n\n  // const [memeImage, setMemeImage] = React.useState(\"http://i.imgflip.com/1bij.jpg\")\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemeImages, setAllMemeImages] = React.useState(memesData);\n  function getMemeImage() {\n    const memesArray = allMemeImages.data.memes;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    const url = memesArray[randomNumber].url;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImage: url\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"form--input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"form--input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: meme.randomImage,\n      className: \"meme--image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(Meme, \"SzdTuWRqP8PujKRIIqM6u+QdpBA=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","jsxDEV","_jsxDEV","Meme","_s","meme","setMeme","useState","topText","bottomText","randomImage","allMemeImages","setAllMemeImages","getMemeImage","memesArray","data","memes","randomNumber","Math","floor","random","length","url","prevMeme","children","className","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","_c","$RefreshReg$"],"sources":["/var/www/html/react/meme-genarator/src/components/Meme.js"],"sourcesContent":["import React from \"react\"\nimport memesData from \"./memesData.js\"\n\nexport default function Meme() {\n    /**\n     * Challenge: Update our state to save the meme-related\n     * data as an object called `meme`. It should have the\n     * following 3 properties:\n     * topText, bottomText, randomImage.\n     * \n     * The 2 text states can default to empty strings for now,\n     * amd randomImage should default to \"http://i.imgflip.com/1bij.jpg\"\n     * \n     * Next, create a new state variable called `allMemeImages`\n     * which will default to `memesData`, which we imported above\n     * \n     * Lastly, update the `getMemeImage` function and the markup \n     * to reflect our newly reformed state object and array in the\n     * correct way.\n     */\n    \n    // const [memeImage, setMemeImage] = React.useState(\"http://i.imgflip.com/1bij.jpg\")\n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \n    })\n    const [allMemeImages, setAllMemeImages] = React.useState(memesData)\n    \n    \n    function getMemeImage() {\n        const memesArray = allMemeImages.data.memes\n        const randomNumber = Math.floor(Math.random() * memesArray.length)\n        const url = memesArray[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n        \n    }\n    \n    return (\n        <main>\n            <div className=\"form\">\n                <input \n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"form--input\"\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"form--input\"\n                />\n                <button \n                    className=\"form--button\"\n                    onClick={getMemeImage}\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n            </div>\n            <img src={meme.randomImage} className=\"meme--image\" />\n        </main>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC;IACnCC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,KAAK,CAACQ,QAAQ,CAACP,SAAS,CAAC;EAGnE,SAASa,YAAYA,CAAA,EAAG;IACpB,MAAMC,UAAU,GAAGH,aAAa,CAACI,IAAI,CAACC,KAAK;IAC3C,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,UAAU,CAACO,MAAM,CAAC;IAClE,MAAMC,GAAG,GAAGR,UAAU,CAACG,YAAY,CAAC,CAACK,GAAG;IACxChB,OAAO,CAACiB,QAAQ,KAAK;MACjB,GAAGA,QAAQ;MACXb,WAAW,EAAEY;IACjB,CAAC,CAAC,CAAC;EAEP;EAEA,oBACIpB,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAKuB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjBtB,OAAA;QACIwB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBF,SAAS,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACF7B,OAAA;QACIwB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QACzBF,SAAS,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACF7B,OAAA;QACIuB,SAAS,EAAC,cAAc;QACxBO,OAAO,EAAEnB,YAAa;QAAAW,QAAA,EACzB;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACN7B,OAAA;MAAK+B,GAAG,EAAE5B,IAAI,CAACK,WAAY;MAACe,SAAS,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEf;AAAC3B,EAAA,CA7DuBD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}